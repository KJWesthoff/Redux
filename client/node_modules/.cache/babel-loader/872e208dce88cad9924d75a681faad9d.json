{"ast":null,"code":"var _jsxFileName = \"/home/kj/Bootcamp/challenges/Redux/client/src/pages/Detail.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\nimport Cart from \"../components/Cart\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY, ADD_TO_CART, UPDATE_PRODUCTS } from \"../utils/actions\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from '../assets/spinner.gif';\nimport store from \"../store/store\";\n\nfunction Detail() {\n  //const [state, dispatch] = useStoreContext();\n  const state = store.getState();\n  const dispatch = store.dispatch;\n  const {\n    id\n  } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS);\n  const {\n    products,\n    cart\n  } = state;\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } // retrieved from server\n    else if (data) {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: data.products\n        });\n        data.products.forEach(product => {\n          idbPromise('products', 'put', product);\n        });\n      } // get cache from idb\n      else if (!loading) {\n          idbPromise('products', 'get').then(indexedProducts => {\n            dispatch({\n              type: UPDATE_PRODUCTS,\n              products: indexedProducts\n            });\n          });\n        }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find(cartItem => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', { ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct,\n          purchaseQuantity: 1\n        }\n      });\n      idbPromise('cart', 'put', { ...currentProduct,\n        purchaseQuantity: 1\n      });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n    idbPromise('cart', 'delete', { ...currentProduct\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, currentProduct && cart ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"\\u2190 Back to Products\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, currentProduct.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, currentProduct.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Price:\"), \"$\", currentProduct.price, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addToCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Add to Cart\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !cart.find(p => p._id === currentProduct._id),\n    onClick: removeFromCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Remove from Cart\")), /*#__PURE__*/React.createElement(\"img\", {\n    src: `/images/${currentProduct.image}`,\n    alt: currentProduct.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  })) : null, loading ? /*#__PURE__*/React.createElement(\"img\", {\n    src: spinner,\n    alt: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }) : null, /*#__PURE__*/React.createElement(Cart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }));\n}\n\n;\nexport default Detail;","map":{"version":3,"sources":["/home/kj/Bootcamp/challenges/Redux/client/src/pages/Detail.js"],"names":["React","useEffect","useState","Link","useParams","useQuery","Cart","useStoreContext","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","ADD_TO_CART","UPDATE_PRODUCTS","QUERY_PRODUCTS","idbPromise","spinner","store","Detail","state","getState","dispatch","id","currentProduct","setCurrentProduct","loading","data","products","cart","length","find","product","_id","type","forEach","then","indexedProducts","addToCart","itemInCart","cartItem","purchaseQuantity","parseInt","removeFromCart","name","description","price","p","image"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nimport Cart from \"../components/Cart\";\r\nimport { useStoreContext } from \"../utils/GlobalState\";\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  ADD_TO_CART,\r\n  UPDATE_PRODUCTS,\r\n} from \"../utils/actions\";\r\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\r\nimport { idbPromise } from \"../utils/helpers\";\r\nimport spinner from '../assets/spinner.gif'\r\nimport store from \"../store/store\"\r\n\r\n\r\nfunction Detail() {\r\n  //const [state, dispatch] = useStoreContext();\r\n  const state = store.getState();\r\n  const dispatch = store.dispatch;\r\n\r\n  \r\n  const { id } = useParams();\r\n\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  const { products, cart } = state;\r\n\r\n  useEffect(() => {\r\n    // already in global store\r\n    if (products.length) {\r\n      setCurrentProduct(products.find(product => product._id === id));\r\n    } \r\n    // retrieved from server\r\n    else if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products\r\n      });\r\n\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    }\r\n    // get cache from idb\r\n    else if (!loading) {\r\n      idbPromise('products', 'get').then((indexedProducts) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: indexedProducts\r\n        });\r\n      });\r\n    }\r\n  }, [products, data, loading, dispatch, id]);\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === id)\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...currentProduct, purchaseQuantity: 1 }\r\n      });\r\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\r\n\r\n    }\r\n  }\r\n\r\n  const removeFromCart = () => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: currentProduct._id\r\n    });\r\n\r\n    idbPromise('cart', 'delete', { ...currentProduct });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentProduct && cart ? (\r\n        <div className=\"container my-1\">\r\n          <Link to=\"/\">\r\n            ← Back to Products\r\n          </Link>\r\n\r\n          <h2>{currentProduct.name}</h2>\r\n\r\n          <p>\r\n            {currentProduct.description}\r\n          </p>\r\n\r\n          <p>\r\n            <strong>Price:</strong>\r\n            ${currentProduct.price}\r\n            {\" \"}\r\n            <button onClick={addToCart}>\r\n              Add to Cart\r\n            </button>\r\n            <button \r\n              disabled={!cart.find(p => p._id === currentProduct._id)} \r\n              onClick={removeFromCart}\r\n            >\r\n              Remove from Cart\r\n            </button>\r\n          </p>\r\n\r\n          <img\r\n            src={`/images/${currentProduct.image}`}\r\n            alt={currentProduct.name}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      {\r\n        loading ? <img src={spinner} alt=\"loading\" /> : null\r\n      }\r\n      <Cart />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n"]},"metadata":{},"sourceType":"module"}