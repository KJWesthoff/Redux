{"ast":null,"code":"var _jsxFileName = \"/home/kj/Bootcamp/challenges/Redux/client/src/components/CartItem/index.js\";\nimport React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport store from \"../../store/store\";\n\nconst CartItem = ({\n  item\n}) => {\n  //const [, dispatch] = useStoreContext();\n  const dispatch = store.dispatch;\n\n  const removeFromCart = item => {\n    console.log(\"remove runing\");\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item\n    });\n  };\n\n  const onChange = e => {\n    const value = e.target.value;\n\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item\n      });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item,\n        purchaseQuantity: parseInt(value)\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `/images/${item.image}`,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, item.name, \", $\", item.price), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Qty:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"1\",\n    value: item.purchaseQuantity,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"trash\",\n    onClick: () => removeFromCart(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDDD1\\uFE0F\"))));\n};\n\nexport default CartItem;","map":{"version":3,"sources":["/home/kj/Bootcamp/challenges/Redux/client/src/components/CartItem/index.js"],"names":["React","useStoreContext","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","idbPromise","store","CartItem","item","dispatch","removeFromCart","console","log","type","_id","onChange","e","value","target","purchaseQuantity","parseInt","image","name","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,gBAAT,EAA2BC,oBAA3B,QAAuD,qBAAvD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAE7B;AAEA,QAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAvB;;AAIA,QAAMC,cAAc,GAAGF,IAAI,IAAI;AAC7BG,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEV,gBADC;AAEPW,MAAAA,GAAG,EAAEN,IAAI,CAACM;AAFH,KAAD,CAAR;AAIAT,IAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmB,EAAE,GAAGG;AAAL,KAAnB,CAAV;AAED,GARD;;AAUA,QAAMO,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;;AACA,QAAIA,KAAK,KAAK,GAAd,EAAmB;AACjBR,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEV,gBADC;AAEPW,QAAAA,GAAG,EAAEN,IAAI,CAACM;AAFH,OAAD,CAAR;AAIAT,MAAAA,UAAU,CAAC,MAAD,EAAS,QAAT,EAAmB,EAAE,GAAGG;AAAL,OAAnB,CAAV;AAED,KAPD,MAOO;AACLC,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAET,oBADC;AAEPU,QAAAA,GAAG,EAAEN,IAAI,CAACM,GAFH;AAGPK,QAAAA,gBAAgB,EAAEC,QAAQ,CAACH,KAAD;AAHnB,OAAD,CAAR;AAKAZ,MAAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,EAAE,GAAGG,IAAL;AAAWW,QAAAA,gBAAgB,EAAEC,QAAQ,CAACH,KAAD;AAArC,OAAhB,CAAV;AAED;AACF,GAlBD;;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAG,WAAUT,IAAI,CAACa,KAAM,EAD7B;AAEE,IAAA,GAAG,EAAC,EAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,IAAI,CAACc,IAAX,SAAoBd,IAAI,CAACe,KAAzB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,WAAW,EAAC,GAFd;AAGE,IAAA,KAAK,EAAEf,IAAI,CAACW,gBAHd;AAIE,IAAA,QAAQ,EAAEJ,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE;AACE,IAAA,IAAI,EAAC,KADP;AAEE,kBAAW,OAFb;AAGE,IAAA,OAAO,EAAE,MAAML,cAAc,CAACF,IAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARF,CAFF,CAPF,CADF;AA6BD,CAnED;;AAqEA,eAAeD,QAAf","sourcesContent":["import React from 'react';\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\nimport store from \"../../store/store\"\r\n\r\nconst CartItem = ({ item }) => {\r\n\r\n  //const [, dispatch] = useStoreContext();\r\n\r\n  const dispatch = store.dispatch \r\n\r\n\r\n\r\n  const removeFromCart = item => {\r\n    console.log(\"remove runing\")\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id\r\n    });\r\n    idbPromise('cart', 'delete', { ...item });\r\n\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === '0') {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise('cart', 'delete', { ...item });\r\n\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value)\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div>\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            üóëÔ∏è\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;"]},"metadata":{},"sourceType":"module"}