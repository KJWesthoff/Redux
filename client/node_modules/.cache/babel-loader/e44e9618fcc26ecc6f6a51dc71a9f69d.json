{"ast":null,"code":"import { useReducer } from \"react\";\nimport { UPDATE_PRODUCTS, ADD_TO_CART, UPDATE_CART_QUANTITY, REMOVE_FROM_CART, ADD_MULTIPLE_TO_CART, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY, CLEAR_CART, TOGGLE_CART } from \"../utils/actions\";\nconst initalState = {\n  items: [],\n  item: {},\n  cartOpen: false,\n  cart: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return { ...state,\n        products: [...action.products]\n      };\n\n    case ADD_TO_CART:\n      return { ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product]\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return { ...state,\n        cart: [...state.cart, ...action.products]\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return { ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n\n          return product;\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n      return { ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return { ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return { ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return { ...state,\n        categories: [...action.categories]\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return { ...state,\n        currentCategory: action.currentCategory\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/kj/Bootcamp/challenges/Redux/client/src/reducers/reduxReducers.js"],"names":["useReducer","UPDATE_PRODUCTS","ADD_TO_CART","UPDATE_CART_QUANTITY","REMOVE_FROM_CART","ADD_MULTIPLE_TO_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","CLEAR_CART","TOGGLE_CART","initalState","items","item","cartOpen","cart","reducer","state","action","type","products","product","map","_id","purchaseQuantity","newState","filter","length","categories","currentCategory"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SACEC,eADF,EAEEC,WAFF,EAGEC,oBAHF,EAIEC,gBAJF,EAKEC,oBALF,EAMEC,iBANF,EAOEC,uBAPF,EAQEC,UARF,EASEC,WATF,QAUO,kBAVP;AAcA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,IAAI,EAAE,EAFU;AAGhBC,EAAAA,QAAQ,EAAE,KAHM;AAIhBC,EAAAA,IAAI,EAAE;AAJU,CAApB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKjB,eAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELG,QAAAA,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAX;AAFL,OAAP;;AAKF,SAAKjB,WAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELH,QAAAA,QAAQ,EAAE,IAFL;AAGLC,QAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBG,MAAM,CAACG,OAAvB;AAHD,OAAP;;AAMF,SAAKf,oBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgB,GAAGG,MAAM,CAACE,QAA1B;AAFD,OAAP;;AAKF,SAAKhB,oBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELH,QAAAA,QAAQ,EAAE,IAFL;AAGLC,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWO,GAAX,CAAeD,OAAO,IAAI;AAC9B,cAAIH,MAAM,CAACK,GAAP,KAAeF,OAAO,CAACE,GAA3B,EAAgC;AAC9BF,YAAAA,OAAO,CAACG,gBAAR,GAA2BN,MAAM,CAACM,gBAAlC;AACD;;AACD,iBAAOH,OAAP;AACD,SALK;AAHD,OAAP;;AAWF,SAAKhB,gBAAL;AACE,UAAIoB,QAAQ,GAAGR,KAAK,CAACF,IAAN,CAAWW,MAAX,CAAkBL,OAAO,IAAI;AAC1C,eAAOA,OAAO,CAACE,GAAR,KAAgBL,MAAM,CAACK,GAA9B;AACD,OAFc,CAAf;AAIA,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,QAAQ,EAAEW,QAAQ,CAACE,MAAT,GAAkB,CAFvB;AAGLZ,QAAAA,IAAI,EAAEU;AAHD,OAAP;;AAMF,SAAKhB,UAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,QAAQ,EAAE,KAFL;AAGLC,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAMF,SAAKL,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,QAAQ,EAAE,CAACG,KAAK,CAACH;AAFZ,OAAP;;AAKF,SAAKP,iBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELW,QAAAA,UAAU,EAAE,CAAC,GAAGV,MAAM,CAACU,UAAX;AAFP,OAAP;;AAKF,SAAKpB,uBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELY,QAAAA,eAAe,EAAEX,MAAM,CAACW;AAFnB,OAAP;;AAKF;AACE,aAAOZ,KAAP;AArEJ;AAuED,CAxED;;AA0EA,eAAeD,OAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport {\r\n  UPDATE_PRODUCTS,\r\n  ADD_TO_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  REMOVE_FROM_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  CLEAR_CART,\r\n  TOGGLE_CART\r\n} from \"../utils/actions\";\r\n\r\n\r\n\r\nconst initalState = {\r\n    items: [],\r\n    item: {},\r\n    cartOpen: false,\r\n    cart: [],\r\n    \r\n}\r\n\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: [...action.products],\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.product],\r\n      };\r\n\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.products],\r\n      };\r\n\r\n    case UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map(product => {\r\n          if (action._id === product._id) {\r\n            product.purchaseQuantity = action.purchaseQuantity\r\n          }\r\n          return product\r\n        })\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter(product => {\r\n        return product._id !== action._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: []\r\n      };\r\n\r\n    case TOGGLE_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen\r\n      };\r\n\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}